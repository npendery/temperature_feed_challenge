version: '3'

services:
  db:
    image: postgres:16.1
    container_name: temperature_db
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: temperature_redis
    ports:
      - "6379:6379"

  backend:
    build: .
    container_name: temperature_backend
    environment:
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    volumes:
      - .:/app
    command: > 
      sh -c "python manage.py makemigrations
      && python manage.py migrate --noinput 
      && python manage.py collectstatic --noinput 
      && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
  
  external_api:
    container_name: temperature_api
    image: us.gcr.io/loft-orbital-public/hiring/challenges/ground-software/back-end/satellite-temperature
    ports:
      - "1000:4000"

  ingest_data:
    build: .
    container_name: temperature_ingest
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py shell < loft_temperature_feed_app/ingest_data.py"
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      - db
      - external_api
      - backend

volumes:
  db:
